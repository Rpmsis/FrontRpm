import QRious from 'qrious';
import { defineComponent, ref, watch, h } from 'vue';

var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
const LEVELS = ["L", "M", "Q", "H"];
var index = defineComponent({
  props: {
    value: {
      type: String,
      required: true
    },
    background: String,
    backgroundAlpha: Number,
    foreground: String,
    foregroundAlpha: Number,
    level: {
      type: String,
      validator: (level) => LEVELS.includes(level)
    },
    mime: String,
    padding: Number,
    size: Number
  },
  setup(props, { attrs, emit }) {
    const qrious = new QRious(props);
    const toDataURL = () => {
      try {
        const dataUrl = qrious.toDataURL(props.mime);
        emit("change", dataUrl);
        return dataUrl;
      } catch (err) {
        emit("error", err);
      }
    };
    const dataUrlRef = ref(toDataURL());
    watch(props, () => {
      qrious.set(props);
      dataUrlRef.value = toDataURL();
    });
    return () => h("img", __spreadProps(__spreadValues({}, attrs), {
      src: dataUrlRef.value
    }));
  }
});

export { LEVELS, index as default };
